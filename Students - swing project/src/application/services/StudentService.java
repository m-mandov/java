
package application.services;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "StudentService", targetNamespace = "http://services.application/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface StudentService {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isAuthorized", targetNamespace = "http://services.application/", className = "application.services.IsAuthorized")
    @ResponseWrapper(localName = "isAuthorizedResponse", targetNamespace = "http://services.application/", className = "application.services.IsAuthorizedResponse")
    @Action(input = "http://services.application/StudentService/isAuthorizedRequest", output = "http://services.application/StudentService/isAuthorizedResponse")
    public boolean isAuthorized(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "deleteStudent", targetNamespace = "http://services.application/", className = "application.services.DeleteStudent")
    @ResponseWrapper(localName = "deleteStudentResponse", targetNamespace = "http://services.application/", className = "application.services.DeleteStudentResponse")
    @Action(input = "http://services.application/StudentService/deleteStudentRequest", output = "http://services.application/StudentService/deleteStudentResponse")
    public void deleteStudent(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @return
     *     returns java.util.List<application.services.Student>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllStudents", targetNamespace = "http://services.application/", className = "application.services.GetAllStudents")
    @ResponseWrapper(localName = "getAllStudentsResponse", targetNamespace = "http://services.application/", className = "application.services.GetAllStudentsResponse")
    @Action(input = "http://services.application/StudentService/getAllStudentsRequest", output = "http://services.application/StudentService/getAllStudentsResponse")
    public List<Student> getAllStudents();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "addStudent", targetNamespace = "http://services.application/", className = "application.services.AddStudent")
    @ResponseWrapper(localName = "addStudentResponse", targetNamespace = "http://services.application/", className = "application.services.AddStudentResponse")
    @Action(input = "http://services.application/StudentService/addStudentRequest", output = "http://services.application/StudentService/addStudentResponse")
    public void addStudent(
        @WebParam(name = "arg0", targetNamespace = "")
        Student arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<application.services.Mark>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMarks", targetNamespace = "http://services.application/", className = "application.services.GetMarks")
    @ResponseWrapper(localName = "getMarksResponse", targetNamespace = "http://services.application/", className = "application.services.GetMarksResponse")
    @Action(input = "http://services.application/StudentService/getMarksRequest", output = "http://services.application/StudentService/getMarksResponse")
    public List<Mark> getMarks(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns application.services.Student
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStudentByName", targetNamespace = "http://services.application/", className = "application.services.GetStudentByName")
    @ResponseWrapper(localName = "getStudentByNameResponse", targetNamespace = "http://services.application/", className = "application.services.GetStudentByNameResponse")
    @Action(input = "http://services.application/StudentService/getStudentByNameRequest", output = "http://services.application/StudentService/getStudentByNameResponse")
    public Student getStudentByName(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns application.services.Student
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStudentByFacNumber", targetNamespace = "http://services.application/", className = "application.services.GetStudentByFacNumber")
    @ResponseWrapper(localName = "getStudentByFacNumberResponse", targetNamespace = "http://services.application/", className = "application.services.GetStudentByFacNumberResponse")
    @Action(input = "http://services.application/StudentService/getStudentByFacNumberRequest", output = "http://services.application/StudentService/getStudentByFacNumberResponse")
    public Student getStudentByFacNumber(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

}
